From 7c0e9bc509f68c41e3be9d725a20ed3e07f2f383 Mon Sep 17 00:00:00 2001
From: Michele Bini <michele.bini@gmail.com>
Date: Tue, 3 Dec 2013 17:43:18 +0100
Subject: [PATCH] Use bitshift operation.

This unfortunately breaks the algorithm, needs to be looked into.

---
 curve255.js | 322 +++++++++++++++++++++++++++++-------------------------------
 1 file changed, 153 insertions(+), 169 deletions(-)

diff --git a/curve255.js b/curve255.js
index 8b4a48b..91e3681 100644
--- a/curve255.js
+++ b/curve255.js
@@ -101,42 +101,42 @@ function c255lbigintadd(a, b) {
   var r = [];
   var v;
   r[0] = (v = a[0] + b[0]) % 0x10000;
-  r[1] = (v = Math.floor(v / 0x10000) + a[1] + b[1]) % 0x10000;
-  r[2] = (v = Math.floor(v / 0x10000) + a[2] + b[2]) % 0x10000;
-  r[3] = (v = Math.floor(v / 0x10000) + a[3] + b[3]) % 0x10000;
-  r[4] = (v = Math.floor(v / 0x10000) + a[4] + b[4]) % 0x10000;
-  r[5] = (v = Math.floor(v / 0x10000) + a[5] + b[5]) % 0x10000;
-  r[6] = (v = Math.floor(v / 0x10000) + a[6] + b[6]) % 0x10000;
-  r[7] = (v = Math.floor(v / 0x10000) + a[7] + b[7]) % 0x10000;
-  r[8] = (v = Math.floor(v / 0x10000) + a[8] + b[8]) % 0x10000;
-  r[9] = (v = Math.floor(v / 0x10000) + a[9] + b[9]) % 0x10000;
-  r[10] = (v = Math.floor(v / 0x10000) + a[10] + b[10]) % 0x10000;
-  r[11] = (v = Math.floor(v / 0x10000) + a[11] + b[11]) % 0x10000;
-  r[12] = (v = Math.floor(v / 0x10000) + a[12] + b[12]) % 0x10000;
-  r[13] = (v = Math.floor(v / 0x10000) + a[13] + b[13]) % 0x10000;
-  r[14] = (v = Math.floor(v / 0x10000) + a[14] + b[14]) % 0x10000;
-  r[15] = Math.floor(v / 0x10000) + a[15] + b[15];
+  r[1] = (v = (v >> 16) + a[1] + b[1]) % 0x10000;
+  r[2] = (v = (v >> 16) + a[2] + b[2]) % 0x10000;
+  r[3] = (v = (v >> 16) + a[3] + b[3]) % 0x10000;
+  r[4] = (v = (v >> 16) + a[4] + b[4]) % 0x10000;
+  r[5] = (v = (v >> 16) + a[5] + b[5]) % 0x10000;
+  r[6] = (v = (v >> 16) + a[6] + b[6]) % 0x10000;
+  r[7] = (v = (v >> 16) + a[7] + b[7]) % 0x10000;
+  r[8] = (v = (v >> 16) + a[8] + b[8]) % 0x10000;
+  r[9] = (v = (v >> 16) + a[9] + b[9]) % 0x10000;
+  r[10] = (v = (v >> 16) + a[10] + b[10]) % 0x10000;
+  r[11] = (v = (v >> 16) + a[11] + b[11]) % 0x10000;
+  r[12] = (v = (v >> 16) + a[12] + b[12]) % 0x10000;
+  r[13] = (v = (v >> 16) + a[13] + b[13]) % 0x10000;
+  r[14] = (v = (v >> 16) + a[14] + b[14]) % 0x10000;
+  r[15] = (v >> 16) + a[15] + b[15];
   return r;
 }
 function c255lbigintsub(a, b) {
   var r = [];
   var v;
   r[0] = (v = 0x80000 + a[0] - b[0]) % 0x10000;
-  r[1] = (v = Math.floor(v / 0x10000) + 0x7fff8 + a[1] - b[1]) % 0x10000;
-  r[2] = (v = Math.floor(v / 0x10000) + 0x7fff8 + a[2] - b[2]) % 0x10000;
-  r[3] = (v = Math.floor(v / 0x10000) + 0x7fff8 + a[3] - b[3]) % 0x10000;
-  r[4] = (v = Math.floor(v / 0x10000) + 0x7fff8 + a[4] - b[4]) % 0x10000;
-  r[5] = (v = Math.floor(v / 0x10000) + 0x7fff8 + a[5] - b[5]) % 0x10000;
-  r[6] = (v = Math.floor(v / 0x10000) + 0x7fff8 + a[6] - b[6]) % 0x10000;
-  r[7] = (v = Math.floor(v / 0x10000) + 0x7fff8 + a[7] - b[7]) % 0x10000;
-  r[8] = (v = Math.floor(v / 0x10000) + 0x7fff8 + a[8] - b[8]) % 0x10000;
-  r[9] = (v = Math.floor(v / 0x10000) + 0x7fff8 + a[9] - b[9]) % 0x10000;
-  r[10] = (v = Math.floor(v / 0x10000) + 0x7fff8 + a[10] - b[10]) % 0x10000;
-  r[11] = (v = Math.floor(v / 0x10000) + 0x7fff8 + a[11] - b[11]) % 0x10000;
-  r[12] = (v = Math.floor(v / 0x10000) + 0x7fff8 + a[12] - b[12]) % 0x10000;
-  r[13] = (v = Math.floor(v / 0x10000) + 0x7fff8 + a[13] - b[13]) % 0x10000;
-  r[14] = (v = Math.floor(v / 0x10000) + 0x7fff8 + a[14] - b[14]) % 0x10000;
-  r[15] = Math.floor(v / 0x10000) - 8 + a[15] - b[15];
+  r[1] = (v = (v >> 16) + 0x7fff8 + a[1] - b[1]) % 0x10000;
+  r[2] = (v = (v >> 16) + 0x7fff8 + a[2] - b[2]) % 0x10000;
+  r[3] = (v = (v >> 16) + 0x7fff8 + a[3] - b[3]) % 0x10000;
+  r[4] = (v = (v >> 16) + 0x7fff8 + a[4] - b[4]) % 0x10000;
+  r[5] = (v = (v >> 16) + 0x7fff8 + a[5] - b[5]) % 0x10000;
+  r[6] = (v = (v >> 16) + 0x7fff8 + a[6] - b[6]) % 0x10000;
+  r[7] = (v = (v >> 16) + 0x7fff8 + a[7] - b[7]) % 0x10000;
+  r[8] = (v = (v >> 16) + 0x7fff8 + a[8] - b[8]) % 0x10000;
+  r[9] = (v = (v >> 16) + 0x7fff8 + a[9] - b[9]) % 0x10000;
+  r[10] = (v = (v >> 16) + 0x7fff8 + a[10] - b[10]) % 0x10000;
+  r[11] = (v = (v >> 16) + 0x7fff8 + a[11] - b[11]) % 0x10000;
+  r[12] = (v = (v >> 16) + 0x7fff8 + a[12] - b[12]) % 0x10000;
+  r[13] = (v = (v >> 16) + 0x7fff8 + a[13] - b[13]) % 0x10000;
+  r[14] = (v = (v >> 16) + 0x7fff8 + a[14] - b[14]) % 0x10000;
+  r[15] = (v >> 16) - 8 + a[15] - b[15];
   return r;
 }
 
@@ -144,21 +144,21 @@ function c255lsqr8h(a7, a6, a5, a4, a3, a2, a1, a0) {
   var r = [];
   var v;
   r[0] = (v = a0*a0) % 0x10000;
-  r[1] = (v = Math.floor(v / 0x10000) + 2*a0*a1) % 0x10000;
-  r[2] = (v = Math.floor(v / 0x10000) + 2*a0*a2 + a1*a1) % 0x10000;
-  r[3] = (v = Math.floor(v / 0x10000) + 2*a0*a3 + 2*a1*a2) % 0x10000;
-  r[4] = (v = Math.floor(v / 0x10000) + 2*a0*a4 + 2*a1*a3 + a2*a2) % 0x10000;
-  r[5] = (v = Math.floor(v / 0x10000) + 2*a0*a5 + 2*a1*a4 + 2*a2*a3) % 0x10000;
-  r[6] = (v = Math.floor(v / 0x10000) + 2*a0*a6 + 2*a1*a5 + 2*a2*a4 + a3*a3) % 0x10000;
-  r[7] = (v = Math.floor(v / 0x10000) + 2*a0*a7 + 2*a1*a6 + 2*a2*a5 + 2*a3*a4) % 0x10000;
-  r[8] = (v = Math.floor(v / 0x10000) + 2*a1*a7 + 2*a2*a6 + 2*a3*a5 + a4*a4) % 0x10000;
-  r[9] = (v = Math.floor(v / 0x10000) + 2*a2*a7 + 2*a3*a6 + 2*a4*a5) % 0x10000;
-  r[10] = (v = Math.floor(v / 0x10000) + 2*a3*a7 + 2*a4*a6 + a5*a5) % 0x10000;
-  r[11] = (v = Math.floor(v / 0x10000) + 2*a4*a7 + 2*a5*a6) % 0x10000;
-  r[12] = (v = Math.floor(v / 0x10000) + 2*a5*a7 + a6*a6) % 0x10000;
-  r[13] = (v = Math.floor(v / 0x10000) + 2*a6*a7) % 0x10000;
-  r[14] = (v = Math.floor(v / 0x10000) + a7*a7) % 0x10000;
-  r[15] = Math.floor(v / 0x10000);
+  r[1] = (v = (v >> 16) + 2*a0*a1) % 0x10000;
+  r[2] = (v = (v >> 16) + 2*a0*a2 + a1*a1) % 0x10000;
+  r[3] = (v = (v >> 16) + 2*a0*a3 + 2*a1*a2) % 0x10000;
+  r[4] = (v = (v >> 16) + 2*a0*a4 + 2*a1*a3 + a2*a2) % 0x10000;
+  r[5] = (v = (v >> 16) + 2*a0*a5 + 2*a1*a4 + 2*a2*a3) % 0x10000;
+  r[6] = (v = (v >> 16) + 2*a0*a6 + 2*a1*a5 + 2*a2*a4 + a3*a3) % 0x10000;
+  r[7] = (v = (v >> 16) + 2*a0*a7 + 2*a1*a6 + 2*a2*a5 + 2*a3*a4) % 0x10000;
+  r[8] = (v = (v >> 16) + 2*a1*a7 + 2*a2*a6 + 2*a3*a5 + a4*a4) % 0x10000;
+  r[9] = (v = (v >> 16) + 2*a2*a7 + 2*a3*a6 + 2*a4*a5) % 0x10000;
+  r[10] = (v = (v >> 16) + 2*a3*a7 + 2*a4*a6 + a5*a5) % 0x10000;
+  r[11] = (v = (v >> 16) + 2*a4*a7 + 2*a5*a6) % 0x10000;
+  r[12] = (v = (v >> 16) + 2*a5*a7 + a6*a6) % 0x10000;
+  r[13] = (v = (v >> 16) + 2*a6*a7) % 0x10000;
+  r[14] = (v = (v >> 16) + a7*a7) % 0x10000;
+  r[15] = (v >> 16);
   return r;
 }
 
@@ -169,21 +169,21 @@ function c255lsqrmodp(a) {
   var r = [];
   var v;
   r[0] = (v = 0x800000 + z[0] + (y[8] -x[8] -z[8] + x[0] -0x80) * 38) % 0x10000;
-  r[1] = (v = 0x7fff80 + Math.floor(v / 0x10000) + z[1] + (y[9] -x[9] -z[9] + x[1]) * 38) % 0x10000;
-  r[2] = (v = 0x7fff80 + Math.floor(v / 0x10000) + z[2] + (y[10] -x[10] -z[10] + x[2]) * 38) % 0x10000;
-  r[3] = (v = 0x7fff80 + Math.floor(v / 0x10000) + z[3] + (y[11] -x[11] -z[11] + x[3]) * 38) % 0x10000;
-  r[4] = (v = 0x7fff80 + Math.floor(v / 0x10000) + z[4] + (y[12] -x[12] -z[12] + x[4]) * 38) % 0x10000;
-  r[5] = (v = 0x7fff80 + Math.floor(v / 0x10000) + z[5] + (y[13] -x[13] -z[13] + x[5]) * 38) % 0x10000;
-  r[6] = (v = 0x7fff80 + Math.floor(v / 0x10000) + z[6] + (y[14] -x[14] -z[14] + x[6]) * 38) % 0x10000;
-  r[7] = (v = 0x7fff80 + Math.floor(v / 0x10000) + z[7] + (y[15] -x[15] -z[15] + x[7]) * 38) % 0x10000;
-  r[8] = (v = 0x7fff80 + Math.floor(v / 0x10000) + z[8] + y[0] -x[0] -z[0] + x[8] * 38) % 0x10000;
-  r[9] = (v = 0x7fff80 + Math.floor(v / 0x10000) + z[9] + y[1] -x[1] -z[1] + x[9] * 38) % 0x10000;
-  r[10] = (v = 0x7fff80 + Math.floor(v / 0x10000) + z[10] + y[2] -x[2] -z[2] + x[10] * 38) % 0x10000;
-  r[11] = (v = 0x7fff80 + Math.floor(v / 0x10000) + z[11] + y[3] -x[3] -z[3] + x[11] * 38) % 0x10000;
-  r[12] = (v = 0x7fff80 + Math.floor(v / 0x10000) + z[12] + y[4] -x[4] -z[4] + x[12] * 38) % 0x10000;
-  r[13] = (v = 0x7fff80 + Math.floor(v / 0x10000) + z[13] + y[5] -x[5] -z[5] + x[13] * 38) % 0x10000;
-  r[14] = (v = 0x7fff80 + Math.floor(v / 0x10000) + z[14] + y[6] -x[6] -z[6] + x[14] * 38) % 0x10000;
-  r[15] = 0x7fff80 + Math.floor(v / 0x10000) + z[15] + y[7] -x[7] -z[7] + x[15] * 38;
+  r[1] = (v = 0x7fff80 + (v >> 16) + z[1] + (y[9] -x[9] -z[9] + x[1]) * 38) % 0x10000;
+  r[2] = (v = 0x7fff80 + (v >> 16) + z[2] + (y[10] -x[10] -z[10] + x[2]) * 38) % 0x10000;
+  r[3] = (v = 0x7fff80 + (v >> 16) + z[3] + (y[11] -x[11] -z[11] + x[3]) * 38) % 0x10000;
+  r[4] = (v = 0x7fff80 + (v >> 16) + z[4] + (y[12] -x[12] -z[12] + x[4]) * 38) % 0x10000;
+  r[5] = (v = 0x7fff80 + (v >> 16) + z[5] + (y[13] -x[13] -z[13] + x[5]) * 38) % 0x10000;
+  r[6] = (v = 0x7fff80 + (v >> 16) + z[6] + (y[14] -x[14] -z[14] + x[6]) * 38) % 0x10000;
+  r[7] = (v = 0x7fff80 + (v >> 16) + z[7] + (y[15] -x[15] -z[15] + x[7]) * 38) % 0x10000;
+  r[8] = (v = 0x7fff80 + (v >> 16) + z[8] + y[0] -x[0] -z[0] + x[8] * 38) % 0x10000;
+  r[9] = (v = 0x7fff80 + (v >> 16) + z[9] + y[1] -x[1] -z[1] + x[9] * 38) % 0x10000;
+  r[10] = (v = 0x7fff80 + (v >> 16) + z[10] + y[2] -x[2] -z[2] + x[10] * 38) % 0x10000;
+  r[11] = (v = 0x7fff80 + (v >> 16) + z[11] + y[3] -x[3] -z[3] + x[11] * 38) % 0x10000;
+  r[12] = (v = 0x7fff80 + (v >> 16) + z[12] + y[4] -x[4] -z[4] + x[12] * 38) % 0x10000;
+  r[13] = (v = 0x7fff80 + (v >> 16) + z[13] + y[5] -x[5] -z[5] + x[13] * 38) % 0x10000;
+  r[14] = (v = 0x7fff80 + (v >> 16) + z[14] + y[6] -x[6] -z[6] + x[14] * 38) % 0x10000;
+  r[15] = 0x7fff80 + (v >> 16) + z[15] + y[7] -x[7] -z[7] + x[15] * 38;
   c255lreduce(r);
   return r;
 }
@@ -192,21 +192,21 @@ function c255lmul8h(a7, a6, a5, a4, a3, a2, a1, a0, b7, b6, b5, b4, b3, b2, b1,
   var r = [];
   var v;
   r[0] = (v = a0*b0) % 0x10000;
-  r[1] = (v = Math.floor(v / 0x10000) + a0*b1 + a1*b0) % 0x10000;
-  r[2] = (v = Math.floor(v / 0x10000) + a0*b2 + a1*b1 + a2*b0) % 0x10000;
-  r[3] = (v = Math.floor(v / 0x10000) + a0*b3 + a1*b2 + a2*b1 + a3*b0) % 0x10000;
-  r[4] = (v = Math.floor(v / 0x10000) + a0*b4 + a1*b3 + a2*b2 + a3*b1 + a4*b0) % 0x10000;
-  r[5] = (v = Math.floor(v / 0x10000) + a0*b5 + a1*b4 + a2*b3 + a3*b2 + a4*b1 + a5*b0) % 0x10000;
-  r[6] = (v = Math.floor(v / 0x10000) + a0*b6 + a1*b5 + a2*b4 + a3*b3 + a4*b2 + a5*b1 + a6*b0) % 0x10000;
-  r[7] = (v = Math.floor(v / 0x10000) + a0*b7 + a1*b6 + a2*b5 + a3*b4 + a4*b3 + a5*b2 + a6*b1 + a7*b0) % 0x10000;
-  r[8] = (v = Math.floor(v / 0x10000) + a1*b7 + a2*b6 + a3*b5 + a4*b4 + a5*b3 + a6*b2 + a7*b1) % 0x10000;
-  r[9] = (v = Math.floor(v / 0x10000) + a2*b7 + a3*b6 + a4*b5 + a5*b4 + a6*b3 + a7*b2) % 0x10000;
-  r[10] = (v = Math.floor(v / 0x10000) + a3*b7 + a4*b6 + a5*b5 + a6*b4 + a7*b3) % 0x10000;
-  r[11] = (v = Math.floor(v / 0x10000) + a4*b7 + a5*b6 + a6*b5 + a7*b4) % 0x10000;
-  r[12] = (v = Math.floor(v / 0x10000) + a5*b7 + a6*b6 + a7*b5) % 0x10000;
-  r[13] = (v = Math.floor(v / 0x10000) + a6*b7 + a7*b6) % 0x10000;
-  r[14] = (v = Math.floor(v / 0x10000) + a7*b7) % 0x10000;
-  r[15] = Math.floor(v / 0x10000);
+  r[1] = (v = (v >> 16) + a0*b1 + a1*b0) % 0x10000;
+  r[2] = (v = (v >> 16) + a0*b2 + a1*b1 + a2*b0) % 0x10000;
+  r[3] = (v = (v >> 16) + a0*b3 + a1*b2 + a2*b1 + a3*b0) % 0x10000;
+  r[4] = (v = (v >> 16) + a0*b4 + a1*b3 + a2*b2 + a3*b1 + a4*b0) % 0x10000;
+  r[5] = (v = (v >> 16) + a0*b5 + a1*b4 + a2*b3 + a3*b2 + a4*b1 + a5*b0) % 0x10000;
+  r[6] = (v = (v >> 16) + a0*b6 + a1*b5 + a2*b4 + a3*b3 + a4*b2 + a5*b1 + a6*b0) % 0x10000;
+  r[7] = (v = (v >> 16) + a0*b7 + a1*b6 + a2*b5 + a3*b4 + a4*b3 + a5*b2 + a6*b1 + a7*b0) % 0x10000;
+  r[8] = (v = (v >> 16) + a1*b7 + a2*b6 + a3*b5 + a4*b4 + a5*b3 + a6*b2 + a7*b1) % 0x10000;
+  r[9] = (v = (v >> 16) + a2*b7 + a3*b6 + a4*b5 + a5*b4 + a6*b3 + a7*b2) % 0x10000;
+  r[10] = (v = (v >> 16) + a3*b7 + a4*b6 + a5*b5 + a6*b4 + a7*b3) % 0x10000;
+  r[11] = (v = (v >> 16) + a4*b7 + a5*b6 + a6*b5 + a7*b4) % 0x10000;
+  r[12] = (v = (v >> 16) + a5*b7 + a6*b6 + a7*b5) % 0x10000;
+  r[13] = (v = (v >> 16) + a6*b7 + a7*b6) % 0x10000;
+  r[14] = (v = (v >> 16) + a7*b7) % 0x10000;
+  r[15] = (v >> 16);
   return r;
 }
 
@@ -220,103 +220,87 @@ c255lmulmodp(a, b) {
   var r = [];
   var v;
   r[0] = (v = 0x800000 + z[0] + (y[8] -x[8] -z[8] + x[0] -0x80) * 38) % 0x10000;
-  r[1] = (v = 0x7fff80 + Math.floor(v / 0x10000) + z[1] + (y[9] -x[9] -z[9] + x[1]) * 38) % 0x10000;
-  r[2] = (v = 0x7fff80 + Math.floor(v / 0x10000) + z[2] + (y[10] -x[10] -z[10] + x[2]) * 38) % 0x10000;
-  r[3] = (v = 0x7fff80 + Math.floor(v / 0x10000) + z[3] + (y[11] -x[11] -z[11] + x[3]) * 38) % 0x10000;
-  r[4] = (v = 0x7fff80 + Math.floor(v / 0x10000) + z[4] + (y[12] -x[12] -z[12] + x[4]) * 38) % 0x10000;
-  r[5] = (v = 0x7fff80 + Math.floor(v / 0x10000) + z[5] + (y[13] -x[13] -z[13] + x[5]) * 38) % 0x10000;
-  r[6] = (v = 0x7fff80 + Math.floor(v / 0x10000) + z[6] + (y[14] -x[14] -z[14] + x[6]) * 38) % 0x10000;
-  r[7] = (v = 0x7fff80 + Math.floor(v / 0x10000) + z[7] + (y[15] -x[15] -z[15] + x[7]) * 38) % 0x10000;
-  r[8] = (v = 0x7fff80 + Math.floor(v / 0x10000) + z[8] + y[0] -x[0] -z[0] + x[8] * 38) % 0x10000;
-  r[9] = (v = 0x7fff80 + Math.floor(v / 0x10000) + z[9] + y[1] -x[1] -z[1] + x[9] * 38) % 0x10000;
-  r[10] = (v = 0x7fff80 + Math.floor(v / 0x10000) + z[10] + y[2] -x[2] -z[2] + x[10] * 38) % 0x10000;
-  r[11] = (v = 0x7fff80 + Math.floor(v / 0x10000) + z[11] + y[3] -x[3] -z[3] + x[11] * 38) % 0x10000;
-  r[12] = (v = 0x7fff80 + Math.floor(v / 0x10000) + z[12] + y[4] -x[4] -z[4] + x[12] * 38) % 0x10000;
-  r[13] = (v = 0x7fff80 + Math.floor(v / 0x10000) + z[13] + y[5] -x[5] -z[5] + x[13] * 38) % 0x10000;
-  r[14] = (v = 0x7fff80 + Math.floor(v / 0x10000) + z[14] + y[6] -x[6] -z[6] + x[14] * 38) % 0x10000;
-  r[15] = 0x7fff80 + Math.floor(v / 0x10000) + z[15] + y[7] -x[7] -z[7] + x[15] * 38;
+  r[1] = (v = 0x7fff80 + (v >> 16) + z[1] + (y[9] -x[9] -z[9] + x[1]) * 38) % 0x10000;
+  r[2] = (v = 0x7fff80 + (v >> 16) + z[2] + (y[10] -x[10] -z[10] + x[2]) * 38) % 0x10000;
+  r[3] = (v = 0x7fff80 + (v >> 16) + z[3] + (y[11] -x[11] -z[11] + x[3]) * 38) % 0x10000;
+  r[4] = (v = 0x7fff80 + (v >> 16) + z[4] + (y[12] -x[12] -z[12] + x[4]) * 38) % 0x10000;
+  r[5] = (v = 0x7fff80 + (v >> 16) + z[5] + (y[13] -x[13] -z[13] + x[5]) * 38) % 0x10000;
+  r[6] = (v = 0x7fff80 + (v >> 16) + z[6] + (y[14] -x[14] -z[14] + x[6]) * 38) % 0x10000;
+  r[7] = (v = 0x7fff80 + (v >> 16) + z[7] + (y[15] -x[15] -z[15] + x[7]) * 38) % 0x10000;
+  r[8] = (v = 0x7fff80 + (v >> 16) + z[8] + y[0] -x[0] -z[0] + x[8] * 38) % 0x10000;
+  r[9] = (v = 0x7fff80 + (v >> 16) + z[9] + y[1] -x[1] -z[1] + x[9] * 38) % 0x10000;
+  r[10] = (v = 0x7fff80 + (v >> 16) + z[10] + y[2] -x[2] -z[2] + x[10] * 38) % 0x10000;
+  r[11] = (v = 0x7fff80 + (v >> 16) + z[11] + y[3] -x[3] -z[3] + x[11] * 38) % 0x10000;
+  r[12] = (v = 0x7fff80 + (v >> 16) + z[12] + y[4] -x[4] -z[4] + x[12] * 38) % 0x10000;
+  r[13] = (v = 0x7fff80 + (v >> 16) + z[13] + y[5] -x[5] -z[5] + x[13] * 38) % 0x10000;
+  r[14] = (v = 0x7fff80 + (v >> 16) + z[14] + y[6] -x[6] -z[6] + x[14] * 38) % 0x10000;
+  r[15] = 0x7fff80 + (v >> 16) + z[15] + y[7] -x[7] -z[7] + x[15] * 38;
   c255lreduce(r);
   return r;
 }
 
 function c255lreduce(a) {
   var v = a[15];
-  a[15] = v % 0x8000;
-  v = Math.floor(v / 0x8000) * 19;
-  a[0] = (v += a[0]) % 0x10000;
-  v = Math.floor(v / 0x10000);
-  a[1] = (v += a[1]) % 0x10000;
-  v = Math.floor(v / 0x10000);
-  a[2] = (v += a[2]) % 0x10000;
-  v = Math.floor(v / 0x10000);
-  a[3] = (v += a[3]) % 0x10000;
-  v = Math.floor(v / 0x10000);
-  a[4] = (v += a[4]) % 0x10000;
-  v = Math.floor(v / 0x10000);
-  a[5] = (v += a[5]) % 0x10000;
-  v = Math.floor(v / 0x10000);
-  a[6] = (v += a[6]) % 0x10000;
-  v = Math.floor(v / 0x10000);
-  a[7] = (v += a[7]) % 0x10000;
-  v = Math.floor(v / 0x10000);
-  a[8] = (v += a[8]) % 0x10000;
-  v = Math.floor(v / 0x10000);
-  a[9] = (v += a[9]) % 0x10000;
-  v = Math.floor(v / 0x10000);
-  a[10] = (v += a[10]) % 0x10000;
-  v = Math.floor(v / 0x10000);
-  a[11] = (v += a[11]) % 0x10000;
-  v = Math.floor(v / 0x10000);
-  a[12] = (v += a[12]) % 0x10000;
-  v = Math.floor(v / 0x10000);
-  a[13] = (v += a[13]) % 0x10000;
-  v = Math.floor(v / 0x10000);
-  a[14] = (v += a[14]) % 0x10000;
-  v = Math.floor(v / 0x10000);
+  a[15] = v % 0x8000;              v = (v >> 15) * 19;
+  a[0] = (v += a[0]) % 0x10000;    v = (v >> 16);
+  a[1] = (v += a[1]) % 0x10000;    v = (v >> 16);
+  a[2] = (v += a[2]) % 0x10000;    v = (v >> 16);
+  a[3] = (v += a[3]) % 0x10000;    v = (v >> 16);
+  a[4] = (v += a[4]) % 0x10000;    v = (v >> 16);
+  a[5] = (v += a[5]) % 0x10000;    v = (v >> 16);
+  a[6] = (v += a[6]) % 0x10000;    v = (v >> 16);
+  a[7] = (v += a[7]) % 0x10000;    v = (v >> 16);
+  a[8] = (v += a[8]) % 0x10000;    v = (v >> 16);
+  a[9] = (v += a[9]) % 0x10000;    v = (v >> 16);
+  a[10] = (v += a[10]) % 0x10000;  v = (v >> 16);
+  a[11] = (v += a[11]) % 0x10000;  v = (v >> 16);
+  a[12] = (v += a[12]) % 0x10000;  v = (v >> 16);
+  a[13] = (v += a[13]) % 0x10000;  v = (v >> 16);
+  a[14] = (v += a[14]) % 0x10000;  v = (v >> 16);
   a[15] += v;
 }
 
 function c255laddmodp(a, b) {
   var r = [];
   var v;
-  r[0] = (v = (Math.floor(a[15] / 0x8000) + Math.floor(b[15] / 0x8000)) * 19 + a[0] + b[0]) % 0x10000;
-  r[1] = (v = Math.floor(v / 0x10000) + a[1] + b[1]) % 0x10000;
-  r[2] = (v = Math.floor(v / 0x10000) + a[2] + b[2]) % 0x10000;
-  r[3] = (v = Math.floor(v / 0x10000) + a[3] + b[3]) % 0x10000;
-  r[4] = (v = Math.floor(v / 0x10000) + a[4] + b[4]) % 0x10000;
-  r[5] = (v = Math.floor(v / 0x10000) + a[5] + b[5]) % 0x10000;
-  r[6] = (v = Math.floor(v / 0x10000) + a[6] + b[6]) % 0x10000;
-  r[7] = (v = Math.floor(v / 0x10000) + a[7] + b[7]) % 0x10000;
-  r[8] = (v = Math.floor(v / 0x10000) + a[8] + b[8]) % 0x10000;
-  r[9] = (v = Math.floor(v / 0x10000) + a[9] + b[9]) % 0x10000;
-  r[10] = (v = Math.floor(v / 0x10000) + a[10] + b[10]) % 0x10000;
-  r[11] = (v = Math.floor(v / 0x10000) + a[11] + b[11]) % 0x10000;
-  r[12] = (v = Math.floor(v / 0x10000) + a[12] + b[12]) % 0x10000;
-  r[13] = (v = Math.floor(v / 0x10000) + a[13] + b[13]) % 0x10000;
-  r[14] = (v = Math.floor(v / 0x10000) + a[14] + b[14]) % 0x10000;
-  r[15] = Math.floor(v / 0x10000) + a[15] % 0x8000 + b[15] % 0x8000;
+  r[0] = (v = ((a[15] >> 15) + (b[15] >> 15)) * 19 + a[0] + b[0]) % 0x10000;
+  r[1] = (v = (v >> 16) + a[1] + b[1]) % 0x10000;
+  r[2] = (v = (v >> 16) + a[2] + b[2]) % 0x10000;
+  r[3] = (v = (v >> 16) + a[3] + b[3]) % 0x10000;
+  r[4] = (v = (v >> 16) + a[4] + b[4]) % 0x10000;
+  r[5] = (v = (v >> 16) + a[5] + b[5]) % 0x10000;
+  r[6] = (v = (v >> 16) + a[6] + b[6]) % 0x10000;
+  r[7] = (v = (v >> 16) + a[7] + b[7]) % 0x10000;
+  r[8] = (v = (v >> 16) + a[8] + b[8]) % 0x10000;
+  r[9] = (v = (v >> 16) + a[9] + b[9]) % 0x10000;
+  r[10] = (v = (v >> 16) + a[10] + b[10]) % 0x10000;
+  r[11] = (v = (v >> 16) + a[11] + b[11]) % 0x10000;
+  r[12] = (v = (v >> 16) + a[12] + b[12]) % 0x10000;
+  r[13] = (v = (v >> 16) + a[13] + b[13]) % 0x10000;
+  r[14] = (v = (v >> 16) + a[14] + b[14]) % 0x10000;
+  r[15] = (v >> 16) + a[15] % 0x8000 + b[15] % 0x8000;
   return r;
 }
 
 function c255lsubmodp(a, b) {
   var r = [];
   var v;
-  r[0] = (v = 0x80000 + (Math.floor(a[15] / 0x8000) - Math.floor(b[15] / 0x8000) - 1) * 19 + a[0] - b[0]) % 0x10000;
-  r[1] = (v = Math.floor(v / 0x10000) + 0x7fff8 + a[1] - b[1]) % 0x10000;
-  r[2] = (v = Math.floor(v / 0x10000) + 0x7fff8 + a[2] - b[2]) % 0x10000;
-  r[3] = (v = Math.floor(v / 0x10000) + 0x7fff8 + a[3] - b[3]) % 0x10000;
-  r[4] = (v = Math.floor(v / 0x10000) + 0x7fff8 + a[4] - b[4]) % 0x10000;
-  r[5] = (v = Math.floor(v / 0x10000) + 0x7fff8 + a[5] - b[5]) % 0x10000;
-  r[6] = (v = Math.floor(v / 0x10000) + 0x7fff8 + a[6] - b[6]) % 0x10000;
-  r[7] = (v = Math.floor(v / 0x10000) + 0x7fff8 + a[7] - b[7]) % 0x10000;
-  r[8] = (v = Math.floor(v / 0x10000) + 0x7fff8 + a[8] - b[8]) % 0x10000;
-  r[9] = (v = Math.floor(v / 0x10000) + 0x7fff8 + a[9] - b[9]) % 0x10000;
-  r[10] = (v = Math.floor(v / 0x10000) + 0x7fff8 + a[10] - b[10]) % 0x10000;
-  r[11] = (v = Math.floor(v / 0x10000) + 0x7fff8 + a[11] - b[11]) % 0x10000;
-  r[12] = (v = Math.floor(v / 0x10000) + 0x7fff8 + a[12] - b[12]) % 0x10000;
-  r[13] = (v = Math.floor(v / 0x10000) + 0x7fff8 + a[13] - b[13]) % 0x10000;
-  r[14] = (v = Math.floor(v / 0x10000) + 0x7fff8 + a[14] - b[14]) % 0x10000;
-  r[15] = Math.floor(v / 0x10000) + 0x7ff8 + a[15]%0x8000 - b[15]%0x8000;
+  r[0] = (v = 0x80000 + (a[15] >> 15) - (b[15] >> 15) - 1) * 19 + a[0] - b[0]) % 0x10000;
+  r[1] = (v = (v >> 16) + 0x7fff8 + a[1] - b[1]) % 0x10000;
+  r[2] = (v = (v >> 16) + 0x7fff8 + a[2] - b[2]) % 0x10000;
+  r[3] = (v = (v >> 16) + 0x7fff8 + a[3] - b[3]) % 0x10000;
+  r[4] = (v = (v >> 16) + 0x7fff8 + a[4] - b[4]) % 0x10000;
+  r[5] = (v = (v >> 16) + 0x7fff8 + a[5] - b[5]) % 0x10000;
+  r[6] = (v = (v >> 16) + 0x7fff8 + a[6] - b[6]) % 0x10000;
+  r[7] = (v = (v >> 16) + 0x7fff8 + a[7] - b[7]) % 0x10000;
+  r[8] = (v = (v >> 16) + 0x7fff8 + a[8] - b[8]) % 0x10000;
+  r[9] = (v = (v >> 16) + 0x7fff8 + a[9] - b[9]) % 0x10000;
+  r[10] = (v = (v >> 16) + 0x7fff8 + a[10] - b[10]) % 0x10000;
+  r[11] = (v = (v >> 16) + 0x7fff8 + a[11] - b[11]) % 0x10000;
+  r[12] = (v = (v >> 16) + 0x7fff8 + a[12] - b[12]) % 0x10000;
+  r[13] = (v = (v >> 16) + 0x7fff8 + a[13] - b[13]) % 0x10000;
+  r[14] = (v = (v >> 16) + 0x7fff8 + a[14] - b[14]) % 0x10000;
+  r[15] = (v >> 16) + 0x7ff8 + a[15]%0x8000 - b[15]%0x8000;
   return r;
 }
 
@@ -343,21 +327,21 @@ function c255lmulasmall(a) {
   var r = [];
   var v;
   r[0] = (v = a[0] * m) % 0x10000;
-  r[1] = (v = Math.floor(v / 0x10000) + a[1]*m) % 0x10000;
-  r[2] = (v = Math.floor(v / 0x10000) + a[2]*m) % 0x10000;
-  r[3] = (v = Math.floor(v / 0x10000) + a[3]*m) % 0x10000;
-  r[4] = (v = Math.floor(v / 0x10000) + a[4]*m) % 0x10000;
-  r[5] = (v = Math.floor(v / 0x10000) + a[5]*m) % 0x10000;
-  r[6] = (v = Math.floor(v / 0x10000) + a[6]*m) % 0x10000;
-  r[7] = (v = Math.floor(v / 0x10000) + a[7]*m) % 0x10000;
-  r[8] = (v = Math.floor(v / 0x10000) + a[8]*m) % 0x10000;
-  r[9] = (v = Math.floor(v / 0x10000) + a[9]*m) % 0x10000;
-  r[10] = (v = Math.floor(v / 0x10000) + a[10]*m) % 0x10000;
-  r[11] = (v = Math.floor(v / 0x10000) + a[11]*m) % 0x10000;
-  r[12] = (v = Math.floor(v / 0x10000) + a[12]*m) % 0x10000;
-  r[13] = (v = Math.floor(v / 0x10000) + a[13]*m) % 0x10000;
-  r[14] = (v = Math.floor(v / 0x10000) + a[14]*m) % 0x10000;
-  r[15] = Math.floor(v / 0x10000) + a[15]*m;
+  r[1] = (v = (v >> 16) + a[1]*m) % 0x10000;
+  r[2] = (v = (v >> 16) + a[2]*m) % 0x10000;
+  r[3] = (v = (v >> 16) + a[3]*m) % 0x10000;
+  r[4] = (v = (v >> 16) + a[4]*m) % 0x10000;
+  r[5] = (v = (v >> 16) + a[5]*m) % 0x10000;
+  r[6] = (v = (v >> 16) + a[6]*m) % 0x10000;
+  r[7] = (v = (v >> 16) + a[7]*m) % 0x10000;
+  r[8] = (v = (v >> 16) + a[8]*m) % 0x10000;
+  r[9] = (v = (v >> 16) + a[9]*m) % 0x10000;
+  r[10] = (v = (v >> 16) + a[10]*m) % 0x10000;
+  r[11] = (v = (v >> 16) + a[11]*m) % 0x10000;
+  r[12] = (v = (v >> 16) + a[12]*m) % 0x10000;
+  r[13] = (v = (v >> 16) + a[13]*m) % 0x10000;
+  r[14] = (v = (v >> 16) + a[14]*m) % 0x10000;
+  r[15] = (v >> 16) + a[15]*m;
   c255lreduce(r);
   return r;
 }
-- 
1.8.4.rc3

